$version Generated by VerilatedVcd $end
$date Mon Sep 16 12:38:55 2024
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 k$ clk $end
  $var wire 16 5% d_out [15:0] $end
  $var wire  1 %% done $end
  $var wire 16 -% instr [15:0] $end
  $var wire  1 s$ reset $end
  $var wire  1 {$ run $end
  $scope module bigger $end
   $var wire  2 =% S0 [1:0] $end
   $var wire  2 E% S1 [1:0] $end
   $var wire  2 M% S2 [1:0] $end
   $var wire  2 U% S3 [1:0] $end
   $var wire  8 A# addr [7:0] $end
   $var wire  1 k$ clk $end
   $var wire  2 !# cur_state [1:0] $end
   $var wire 16 5% d_out [15:0] $end
   $var wire  1 %% done $end
   $var wire 16 -% instr [15:0] $end
   $var wire 16 9# mem_out [15:0] $end
   $var wire  8 # new_pc [7:0] $end
   $var wire  2 )# next_state [1:0] $end
   $var wire  1 s$ reset $end
   $var wire  1 {$ run $end
   $var wire  1 1# run_bitty $end
   $scope module instance1 $end
    $var wire  1 k$ clk $end
    $var wire  8 # d_in [7:0] $end
    $var wire  8 A# d_out [7:0] $end
    $var wire  1 %% en_pc $end
    $var wire  1 s$ reset $end
   $upscope $end
   $scope module instance2 $end
    $var wire  8 A# addr [7:0] $end
    $var wire  1 k$ clk $end
    $var wire 16 9# out [15:0] $end
   $upscope $end
   $scope module instance3 $end
    $var wire 16 %! alu_out [15:0] $end
    $var wire  3 E! alu_sel [2:0] $end
    $var wire  1 k$ clk $end
    $var wire 16 9# d_instr [15:0] $end
    $var wire 16 5% d_out [15:0] $end
    $var wire  1 %% done $end
    $var wire  8 3 en [7:0] $end
    $var wire  1 5! en_c $end
    $var wire  1 =! en_inst $end
    $var wire  1 -! en_s $end
    $var wire 16 M! im_d [15:0] $end
    $var wire 16 a# instruction [15:0] $end
    $var wire  4 + mux_sel [3:0] $end
    $var wire 16 ; out(0) [15:0] $end
    $var wire 16 < out(1) [15:0] $end
    $var wire 16 = out(2) [15:0] $end
    $var wire 16 > out(3) [15:0] $end
    $var wire 16 ? out(4) [15:0] $end
    $var wire 16 @ out(5) [15:0] $end
    $var wire 16 A out(6) [15:0] $end
    $var wire 16 B out(7) [15:0] $end
    $var wire 16 { out_mux [15:0] $end
    $var wire 16 q# regc [15:0] $end
    $var wire 16 i# regs [15:0] $end
    $var wire  1 s$ reset $end
    $var wire  1 1# run $end
    $scope module alu_inst $end
     $var wire  3 ]% ADD [2:0] $end
     $var wire  3 m% AND [2:0] $end
     $var wire  3 7& CMP [2:0] $end
     $var wire  3 u% OR [2:0] $end
     $var wire  3 '& SHL [2:0] $end
     $var wire  3 /& SHR [2:0] $end
     $var wire  3 e% SUB [2:0] $end
     $var wire  3 }% XOR [2:0] $end
     $var wire 16 %! alu_out [15:0] $end
     $var wire 16 i# in_a [15:0] $end
     $var wire 16 { in_b [15:0] $end
     $var wire 16 %! res [15:0] $end
     $var wire  3 E! select [2:0] $end
    $upscope $end
    $scope module cpu_inst $end
     $var wire  2 =% S0 [1:0] $end
     $var wire  2 E% S1 [1:0] $end
     $var wire  2 M% S2 [1:0] $end
     $var wire  1 k$ clk $end
     $var wire  2 y# cur_state [1:0] $end
     $var wire 16 a# d_inst [15:0] $end
     $var wire  1 %% done $end
     $var wire  8 3 en [7:0] $end
     $var wire  1 5! en_c $end
     $var wire  1 =! en_inst $end
     $var wire  1 -! en_s $end
     $var wire  2 #$ format [1:0] $end
     $var wire 16 M! im_d [15:0] $end
     $var wire  4 + mux_sel [3:0] $end
     $var wire  2 U! next_state [1:0] $end
     $var wire  1 s$ reset $end
     $var wire  1 1# run $end
     $var wire  3 E! sel [2:0] $end
    $upscope $end
    $scope module genblk1(0) $end
     $scope module reg_out $end
      $var wire  1 k$ clk $end
      $var wire 16 q# d_in [15:0] $end
      $var wire  1 ?" en $end
      $var wire 16 +$ mux_out [15:0] $end
      $var wire  1 s$ reset $end
      $var wire 16 ?& starting [15:0] $end
     $upscope $end
    $upscope $end
    $scope module genblk1(1) $end
     $scope module reg_out $end
      $var wire  1 k$ clk $end
      $var wire 16 q# d_in [15:0] $end
      $var wire  1 G" en $end
      $var wire 16 3$ mux_out [15:0] $end
      $var wire  1 s$ reset $end
      $var wire 16 ?& starting [15:0] $end
     $upscope $end
    $upscope $end
    $scope module genblk1(2) $end
     $scope module reg_out $end
      $var wire  1 k$ clk $end
      $var wire 16 q# d_in [15:0] $end
      $var wire  1 O" en $end
      $var wire 16 ;$ mux_out [15:0] $end
      $var wire  1 s$ reset $end
      $var wire 16 ?& starting [15:0] $end
     $upscope $end
    $upscope $end
    $scope module genblk1(3) $end
     $scope module reg_out $end
      $var wire  1 k$ clk $end
      $var wire 16 q# d_in [15:0] $end
      $var wire  1 W" en $end
      $var wire 16 C$ mux_out [15:0] $end
      $var wire  1 s$ reset $end
      $var wire 16 ?& starting [15:0] $end
     $upscope $end
    $upscope $end
    $scope module genblk1(4) $end
     $scope module reg_out $end
      $var wire  1 k$ clk $end
      $var wire 16 q# d_in [15:0] $end
      $var wire  1 _" en $end
      $var wire 16 K$ mux_out [15:0] $end
      $var wire  1 s$ reset $end
      $var wire 16 ?& starting [15:0] $end
     $upscope $end
    $upscope $end
    $scope module genblk1(5) $end
     $scope module reg_out $end
      $var wire  1 k$ clk $end
      $var wire 16 q# d_in [15:0] $end
      $var wire  1 g" en $end
      $var wire 16 S$ mux_out [15:0] $end
      $var wire  1 s$ reset $end
      $var wire 16 ?& starting [15:0] $end
     $upscope $end
    $upscope $end
    $scope module genblk1(6) $end
     $scope module reg_out $end
      $var wire  1 k$ clk $end
      $var wire 16 q# d_in [15:0] $end
      $var wire  1 o" en $end
      $var wire 16 [$ mux_out [15:0] $end
      $var wire  1 s$ reset $end
      $var wire 16 ?& starting [15:0] $end
     $upscope $end
    $upscope $end
    $scope module genblk1(7) $end
     $scope module reg_out $end
      $var wire  1 k$ clk $end
      $var wire 16 q# d_in [15:0] $end
      $var wire  1 w" en $end
      $var wire 16 c$ mux_out [15:0] $end
      $var wire  1 s$ reset $end
      $var wire 16 ?& starting [15:0] $end
     $upscope $end
    $upscope $end
    $scope module mux_inst $end
     $var wire 16 ?& def_val [15:0] $end
     $var wire 16 M! im_d [15:0] $end
     $var wire 16 { mux_out [15:0] $end
     $var wire  4 + mux_sel [3:0] $end
     $var wire 16 ]! reg0 [15:0] $end
     $var wire 16 e! reg1 [15:0] $end
     $var wire 16 m! reg2 [15:0] $end
     $var wire 16 u! reg3 [15:0] $end
     $var wire 16 }! reg4 [15:0] $end
     $var wire 16 '" reg5 [15:0] $end
     $var wire 16 /" reg6 [15:0] $end
     $var wire 16 7" reg7 [15:0] $end
    $upscope $end
    $scope module reg_c $end
     $var wire  1 k$ clk $end
     $var wire 16 %! d_in [15:0] $end
     $var wire  1 5! en $end
     $var wire 16 q# mux_out [15:0] $end
     $var wire  1 s$ reset $end
     $var wire 16 ?& starting [15:0] $end
    $upscope $end
    $scope module reg_inst $end
     $var wire  1 k$ clk $end
     $var wire 16 9# d_in [15:0] $end
     $var wire  1 =! en $end
     $var wire 16 a# mux_out [15:0] $end
     $var wire  1 s$ reset $end
     $var wire 16 ?& starting [15:0] $end
    $upscope $end
    $scope module reg_s $end
     $var wire  1 k$ clk $end
     $var wire 16 { d_in [15:0] $end
     $var wire  1 -! en $end
     $var wire 16 i# mux_out [15:0] $end
     $var wire  1 s$ reset $end
     $var wire 16 ?& starting [15:0] $end
    $upscope $end
   $upscope $end
   $scope module instance4 $end
    $var wire  8 A# address [7:0] $end
    $var wire  2 I# branch_cond [1:0] $end
    $var wire  2 Y# format [1:0] $end
    $var wire  8 Q# immediate [7:0] $end
    $var wire 16 9# instruction [15:0] $end
    $var wire 16 5% last_alu_result [15:0] $end
    $var wire  8 # new_pc [7:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000001 #
b0000 +
b00000000 3
b0000000000000000 ;
b0000000000000000 <
b0000000000000000 =
b0000000000000000 >
b0000000000000000 ?
b0000000000000000 @
b0000000000000000 A
b0000000000000000 B
b0000000000000000 {
b0000000000000000 %!
1-!
05!
1=!
b000 E!
b0000000000000000 M!
b00 U!
b0000000000000000 ]!
b0000000000000000 e!
b0000000000000000 m!
b0000000000000000 u!
b0000000000000000 }!
b0000000000000000 '"
b0000000000000000 /"
b0000000000000000 7"
0?"
0G"
0O"
0W"
0_"
0g"
0o"
0w"
b00 !#
b01 )#
01#
b0010000001100001 9#
b00000000 A#
b00 I#
b00000110 Q#
b01 Y#
b0000000000000000 a#
b0000000000000000 i#
b0000000000000000 q#
b00 y#
b00 #$
b0000000000000000 +$
b0000000000000000 3$
b0000000000000000 ;$
b0000000000000000 C$
b0000000000000000 K$
b0000000000000000 S$
b0000000000000000 [$
b0000000000000000 c$
1k$
1s$
1{$
0%%
b0010000001100001 -%
b0000000000000000 5%
b00 =%
b01 E%
b10 M%
b11 U%
b000 ]%
b001 e%
b010 m%
b011 u%
b100 }%
b101 '&
b110 /&
b111 7&
b0000000000000000 ?&
#1
0k$
0s$
#2
b0001 +
b0000000000000011 M!
b01 !#
b10 )#
b0010000001100001 a#
b01 #$
1k$
#3
0k$
#4
b10 !#
b11 )#
1k$
#5
0k$
#6
b01 U!
b11 !#
b00 )#
11#
1k$
#7
0k$
#8
b1000 +
b0000000000000011 {
b0000000000000011 %!
0-!
15!
0=!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#9
0k$
#10
b1001 +
b00000010 3
b0000000000000000 {
b0000000000000000 %!
05!
1=!
b00 U!
1G"
b01 !#
b10 )#
b0000000000000011 q#
b10 y#
1k$
0{$
1%%
b0000000000000011 5%
#11
0k$
1{$
#12
b00000010 #
b0001 +
b00000000 3
b0000000000000011 <
b0000000000000011 {
b0000000000000011 %!
1-!
b0000000000000011 e!
0G"
b00 !#
b01 )#
b00000001 A#
b00 y#
b0000000000000011 3$
1k$
0%%
#13
0k$
#14
b0000000000000110 %!
b01 !#
b10 )#
b0100000010100001 9#
b00001010 Q#
b0000000000000011 i#
1k$
b0100000010100001 -%
#15
0k$
#16
b0010 +
b0000000000000000 {
b0000000000000011 %!
b0000000000000101 M!
b10 !#
b11 )#
b0100000010100001 a#
1k$
#17
0k$
#18
b0000000000000000 %!
b01 U!
b11 !#
b00 )#
11#
b0000000000000000 i#
1k$
#19
0k$
#20
b1000 +
b0000000000000101 {
b0000000000000101 %!
0-!
15!
0=!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#21
0k$
#22
b1001 +
b00000100 3
b0000000000000000 {
b0000000000000000 %!
05!
1=!
b00 U!
1O"
b01 !#
b10 )#
b0000000000000101 q#
b10 y#
1k$
0{$
1%%
b0000000000000101 5%
#23
0k$
1{$
#24
b00000011 #
b0010 +
b00000000 3
b0000000000000101 =
b0000000000000101 {
b0000000000000101 %!
1-!
b0000000000000101 m!
0O"
b00 !#
b01 )#
b00000010 A#
b00 y#
b0000000000000101 ;$
1k$
0%%
#25
0k$
#26
b0000000000001010 %!
b01 !#
b10 )#
b0010100000011100 9#
b11 I#
b10000001 Q#
b00 Y#
b0000000000000101 i#
1k$
b0010100000011100 -%
#27
0k$
#28
b0001 +
b0000000000000011 {
b0000000000001000 %!
b0000000001000000 M!
b10 !#
b11 )#
b0010100000011100 a#
b00 #$
1k$
#29
0k$
#30
b0000000000000110 %!
b01 U!
b11 !#
b00 )#
11#
b0000000000000011 i#
1k$
#31
0k$
#32
b0010 +
b0000000000000101 {
b0000000000000010 %!
0-!
15!
0=!
b111 E!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#33
0k$
#34
b1001 +
b00000010 3
b0000000000000000 {
b0000000000000011 %!
05!
1=!
b000 E!
b00 U!
1G"
b01 !#
b10 )#
b0000000000000010 q#
b10 y#
1k$
0{$
1%%
b0000000000000010 5%
#35
0k$
1{$
#36
b00000100 #
b0001 +
b00000000 3
b0000000000000010 <
b0000000000000010 {
b0000000000000101 %!
1-!
b0000000000000010 e!
0G"
b00 !#
b01 )#
b00000011 A#
b00 y#
b0000000000000010 3$
1k$
0%%
#37
0k$
#38
b00000111 #
b0000000000000100 %!
b01 !#
b10 )#
b0000000001111010 9#
b10 I#
b00000111 Q#
b10 Y#
b0000000000000010 i#
1k$
b0000000001111010 -%
#39
0k$
#40
b1001 +
b0000000000000000 {
b0000000000000010 %!
0-!
b0000000000000011 M!
b10 !#
b11 )#
b0000000001111010 a#
b10 #$
1k$
#41
0k$
#42
b01 U!
b11 !#
b00 )#
11#
1k$
#43
0k$
#44
15!
0=!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#45
0k$
#46
05!
1=!
b00 U!
b01 !#
b10 )#
b10 y#
1k$
0{$
1%%
#47
0k$
1{$
#48
b00 !#
b01 )#
b00000111 A#
b00 y#
1k$
0%%
#49
0k$
#50
b00001000 #
b01 !#
b10 )#
b0110010000000000 9#
b00 I#
b01000000 Q#
b00 Y#
1k$
b0110010000000000 -%
#51
0k$
#52
b0011 +
1-!
b0000000000100000 M!
b10 !#
b11 )#
b0110010000000000 a#
b00 #$
1k$
#53
0k$
#54
b0000000000000000 %!
b01 U!
b11 !#
b00 )#
11#
b0000000000000000 i#
1k$
#55
0k$
#56
b0001 +
b0000000000000010 {
b0000000000000010 %!
0-!
15!
0=!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#57
0k$
#58
b1001 +
b00001000 3
b0000000000000000 {
b0000000000000000 %!
05!
1=!
b00 U!
1W"
b01 !#
b10 )#
b10 y#
1k$
0{$
1%%
#59
0k$
1{$
#60
b00001001 #
b0011 +
b00000000 3
b0000000000000010 >
b0000000000000010 {
b0000000000000010 %!
1-!
b0000000000000010 u!
0W"
b00 !#
b01 )#
b00001000 A#
b00 y#
b0000000000000010 C$
1k$
0%%
#61
0k$
#62
b0000000000000100 %!
b01 !#
b10 )#
b0110010000011100 9#
b11 I#
b01000001 Q#
b0000000000000010 i#
1k$
b0110010000011100 -%
#63
0k$
#64
b10 !#
b11 )#
b0110010000011100 a#
1k$
#65
0k$
#66
b01 U!
b11 !#
b00 )#
11#
1k$
#67
0k$
#68
b0001 +
b0000000000000000 %!
0-!
15!
0=!
b111 E!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#69
0k$
#70
b1001 +
b00001000 3
b0000000000000000 {
b0000000000000010 %!
05!
1=!
b000 E!
b00 U!
1W"
b01 !#
b10 )#
b0000000000000000 q#
b10 y#
1k$
0{$
1%%
b0000000000000000 5%
#71
0k$
1{$
#72
b00001010 #
b0011 +
b00000000 3
b0000000000000000 >
1-!
b0000000000000000 u!
0W"
b00 !#
b01 )#
b00001001 A#
b00 y#
b0000000000000000 C$
1k$
0%%
#73
0k$
#74
b00000100 #
b0000000000000000 %!
b01 !#
b10 )#
b0000000001000010 9#
b00 I#
b00000100 Q#
b10 Y#
b0000000000000000 i#
1k$
b0000000001000010 -%
#75
0k$
#76
b1001 +
0-!
b0000000000000010 M!
b10 !#
b11 )#
b0000000001000010 a#
b10 #$
1k$
#77
0k$
#78
b01 U!
b11 !#
b00 )#
11#
1k$
#79
0k$
#80
15!
0=!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#81
0k$
#82
05!
1=!
b00 U!
b01 !#
b10 )#
b10 y#
1k$
0{$
1%%
#83
0k$
1{$
#84
b00 !#
b01 )#
b00000100 A#
b00 y#
1k$
0%%
#85
0k$
#86
b00000101 #
b01 !#
b10 )#
b0010000101000001 9#
b00010100 Q#
b01 Y#
1k$
b0010000101000001 -%
#87
0k$
#88
b0001 +
b0000000000000010 {
b0000000000000010 %!
1-!
b0000000000001010 M!
b10 !#
b11 )#
b0010000101000001 a#
b01 #$
1k$
#89
0k$
#90
b0000000000000100 %!
b01 U!
b11 !#
b00 )#
11#
b0000000000000010 i#
1k$
#91
0k$
#92
b1000 +
b0000000000001010 {
b0000000000001100 %!
0-!
15!
0=!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#93
0k$
#94
b1001 +
b00000010 3
b0000000000000000 {
b0000000000000010 %!
05!
1=!
b00 U!
1G"
b01 !#
b10 )#
b0000000000001100 q#
b10 y#
1k$
0{$
1%%
b0000000000001100 5%
#95
0k$
1{$
#96
b00000110 #
b0001 +
b00000000 3
b0000000000001100 <
b0000000000001100 {
b0000000000001110 %!
1-!
b0000000000001100 e!
0G"
b00 !#
b01 )#
b00000101 A#
b00 y#
b0000000000001100 3$
1k$
0%%
#97
0k$
#98
b0000000000011000 %!
b01 !#
b10 )#
b0010100000011100 9#
b11 I#
b10000001 Q#
b00 Y#
b0000000000001100 i#
1k$
b0010100000011100 -%
#99
0k$
#100
b0000000001000000 M!
b10 !#
b11 )#
b0010100000011100 a#
b00 #$
1k$
#101
0k$
#102
b01 U!
b11 !#
b00 )#
11#
1k$
#103
0k$
#104
b0010 +
b0000000000000101 {
b0000000000000001 %!
0-!
15!
0=!
b111 E!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#105
0k$
#106
b1001 +
b00000010 3
b0000000000000000 {
b0000000000001100 %!
05!
1=!
b000 E!
b00 U!
1G"
b01 !#
b10 )#
b0000000000000001 q#
b10 y#
1k$
0{$
1%%
b0000000000000001 5%
#107
0k$
1{$
#108
b00000111 #
b0001 +
b00000000 3
b0000000000000001 <
b0000000000000001 {
b0000000000001101 %!
1-!
b0000000000000001 e!
0G"
b00 !#
b01 )#
b00000110 A#
b00 y#
b0000000000000001 3$
1k$
0%%
#109
0k$
#110
b00001010 #
b0000000000000010 %!
b01 !#
b10 )#
b0000000010100110 9#
b01 I#
b00001010 Q#
b10 Y#
b0000000000000001 i#
1k$
b0000000010100110 -%
#111
0k$
#112
b1001 +
b0000000000000000 {
b0000000000000001 %!
0-!
b0000000000000101 M!
b10 !#
b11 )#
b0000000010100110 a#
b10 #$
1k$
#113
0k$
#114
b01 U!
b11 !#
b00 )#
11#
1k$
#115
0k$
#116
15!
0=!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#117
0k$
#118
05!
1=!
b00 U!
b01 !#
b10 )#
b10 y#
1k$
0{$
1%%
#119
0k$
1{$
#120
b00 !#
b01 )#
b00001010 A#
b00 y#
1k$
0%%
#121
0k$
#122
b00001011 #
b01 !#
b10 )#
b0110100000000000 9#
b00 I#
b10000000 Q#
b00 Y#
1k$
b0110100000000000 -%
#123
0k$
#124
b0011 +
1-!
b0000000001000000 M!
b10 !#
b11 )#
b0110100000000000 a#
b00 #$
1k$
#125
0k$
#126
b0000000000000000 %!
b01 U!
b11 !#
b00 )#
11#
b0000000000000000 i#
1k$
#127
0k$
#128
b0010 +
b0000000000000101 {
b0000000000000101 %!
0-!
15!
0=!
b10 U!
b00 !#
b01 )#
01#
b01 y#
1k$
#129
0k$
#130
b1001 +
b00001000 3
b0000000000000000 {
b0000000000000000 %!
05!
1=!
b00 U!
1W"
b01 !#
b10 )#
b0000000000000101 q#
b10 y#
1k$
0{$
1%%
b0000000000000101 5%
