$version Generated by VerilatedVcd $end
$date Fri Jul  5 15:30:17 2024
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 y# clk $end
  $var wire 16 +$ d_instr [15:0] $end
  $var wire  1 3$ done $end
  $var wire  1 #$ reset $end
  $var wire  1 q# run $end
  $scope module bitty $end
   $var wire 16 E! alu_out [15:0] $end
   $var wire  3 }! alu_sel [2:0] $end
   $var wire  1 y# clk $end
   $var wire 16 +$ d_instr [15:0] $end
   $var wire 16 o" d_out [15:0] $end
   $var wire  1 3$ done $end
   $var wire  8 U! en [7:0] $end
   $var wire  1 m! en_c $end
   $var wire  1 u! en_inst $end
   $var wire  1 e! en_s $end
   $var wire 16 w" instruction [15:0] $end
   $var wire  3 M! mux_sel [2:0] $end
   $var wire 16 # out(0) [15:0] $end
   $var wire 16 $ out(1) [15:0] $end
   $var wire 16 % out(2) [15:0] $end
   $var wire 16 & out(3) [15:0] $end
   $var wire 16 ' out(4) [15:0] $end
   $var wire 16 ( out(5) [15:0] $end
   $var wire 16 ) out(6) [15:0] $end
   $var wire 16 * out(7) [15:0] $end
   $var wire 16 ]! out_mux [15:0] $end
   $var wire 16 o" regc [15:0] $end
   $var wire 16 !# regs [15:0] $end
   $var wire  1 #$ reset $end
   $var wire  1 q# run $end
   $scope module alu_inst $end
    $var wire 16 E! alu_out [15:0] $end
    $var wire 16 !# in_a [15:0] $end
    $var wire 16 ]! in_b [15:0] $end
    $var wire 16 E! res [15:0] $end
    $var wire  3 }! select [2:0] $end
   $upscope $end
   $scope module cpu_inst $end
    $var wire  1 y# clk $end
    $var wire  2 )# cur_state [1:0] $end
    $var wire 16 w" d_inst [15:0] $end
    $var wire  1 3$ done $end
    $var wire  8 U! en [7:0] $end
    $var wire  1 m! en_c $end
    $var wire  1 u! en_inst $end
    $var wire  1 e! en_s $end
    $var wire  3 M! mux_sel [2:0] $end
    $var wire  2 '" next_state [1:0] $end
    $var wire  1 #$ reset $end
    $var wire  1 q# run $end
    $var wire  3 }! sel [2:0] $end
   $upscope $end
   $scope module genblk1(0) $end
    $scope module reg_out $end
     $var wire  1 y# clk $end
     $var wire 16 o" d_in [15:0] $end
     $var wire  1 /" en $end
     $var wire 16 1# mux_out [15:0] $end
     $var wire  1 #$ reset $end
     $var wire 16 C$ starting [15:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk1(1) $end
    $scope module reg_out $end
     $var wire  1 y# clk $end
     $var wire 16 o" d_in [15:0] $end
     $var wire  1 7" en $end
     $var wire 16 9# mux_out [15:0] $end
     $var wire  1 #$ reset $end
     $var wire 16 C$ starting [15:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk1(2) $end
    $scope module reg_out $end
     $var wire  1 y# clk $end
     $var wire 16 o" d_in [15:0] $end
     $var wire  1 ?" en $end
     $var wire 16 A# mux_out [15:0] $end
     $var wire  1 #$ reset $end
     $var wire 16 C$ starting [15:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk1(3) $end
    $scope module reg_out $end
     $var wire  1 y# clk $end
     $var wire 16 o" d_in [15:0] $end
     $var wire  1 G" en $end
     $var wire 16 I# mux_out [15:0] $end
     $var wire  1 #$ reset $end
     $var wire 16 C$ starting [15:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk1(4) $end
    $scope module reg_out $end
     $var wire  1 y# clk $end
     $var wire 16 o" d_in [15:0] $end
     $var wire  1 O" en $end
     $var wire 16 Q# mux_out [15:0] $end
     $var wire  1 #$ reset $end
     $var wire 16 C$ starting [15:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk1(5) $end
    $scope module reg_out $end
     $var wire  1 y# clk $end
     $var wire 16 o" d_in [15:0] $end
     $var wire  1 W" en $end
     $var wire 16 Y# mux_out [15:0] $end
     $var wire  1 #$ reset $end
     $var wire 16 C$ starting [15:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk1(6) $end
    $scope module reg_out $end
     $var wire  1 y# clk $end
     $var wire 16 o" d_in [15:0] $end
     $var wire  1 _" en $end
     $var wire 16 a# mux_out [15:0] $end
     $var wire  1 #$ reset $end
     $var wire 16 C$ starting [15:0] $end
    $upscope $end
   $upscope $end
   $scope module genblk1(7) $end
    $scope module reg_out $end
     $var wire  1 y# clk $end
     $var wire 16 o" d_in [15:0] $end
     $var wire  1 g" en $end
     $var wire 16 i# mux_out [15:0] $end
     $var wire  1 #$ reset $end
     $var wire 16 C$ starting [15:0] $end
    $upscope $end
   $upscope $end
   $scope module mux_inst $end
    $var wire 16 ]! mux_out [15:0] $end
    $var wire  3 M! mux_sel [2:0] $end
    $var wire 16 c reg0 [15:0] $end
    $var wire 16 k reg1 [15:0] $end
    $var wire 16 s reg2 [15:0] $end
    $var wire 16 { reg3 [15:0] $end
    $var wire 16 %! reg4 [15:0] $end
    $var wire 16 -! reg5 [15:0] $end
    $var wire 16 5! reg6 [15:0] $end
    $var wire 16 =! reg7 [15:0] $end
   $upscope $end
   $scope module reg_c $end
    $var wire  1 y# clk $end
    $var wire 16 E! d_in [15:0] $end
    $var wire  1 m! en $end
    $var wire 16 o" mux_out [15:0] $end
    $var wire  1 #$ reset $end
    $var wire 16 ;$ starting [15:0] $end
   $upscope $end
   $scope module reg_inst $end
    $var wire  1 y# clk $end
    $var wire 16 +$ d_in [15:0] $end
    $var wire  1 u! en $end
    $var wire 16 w" mux_out [15:0] $end
    $var wire  1 #$ reset $end
    $var wire 16 ;$ starting [15:0] $end
   $upscope $end
   $scope module reg_s $end
    $var wire  1 y# clk $end
    $var wire 16 ]! d_in [15:0] $end
    $var wire  1 e! en $end
    $var wire 16 !# mux_out [15:0] $end
    $var wire  1 #$ reset $end
    $var wire 16 ;$ starting [15:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000000000001010 #
b0000000000001010 $
b0000000000001010 %
b0000000000001010 &
b0000000000001010 '
b0000000000001010 (
b0000000000001010 )
b0000000000001010 *
b0000000000001010 c
b0000000000001010 k
b0000000000001010 s
b0000000000001010 {
b0000000000001010 %!
b0000000000001010 -!
b0000000000001010 5!
b0000000000001010 =!
b0000000000001010 E!
b000 M!
b00000000 U!
b0000000000001010 ]!
0e!
0m!
0u!
b000 }!
b00 '"
0/"
07"
0?"
0G"
0O"
0W"
0_"
0g"
b0000000000000000 o"
b0000000000000000 w"
b0000000000000000 !#
b00 )#
b0000000000001010 1#
b0000000000001010 9#
b0000000000001010 A#
b0000000000001010 I#
b0000000000001010 Q#
b0000000000001010 Y#
b0000000000001010 a#
b0000000000001010 i#
1q#
1y#
1#$
b1011000011110010 +$
03$
b0000000000000000 ;$
b0000000000001010 C$
#1
1e!
1u!
b01 '"
0y#
0#$
#2
b0000000000000000 E!
b100 M!
0e!
1m!
0u!
b100 }!
b11 '"
b1011000011110010 w"
b0000000000001010 !#
b01 )#
1y#
#3
0y#
#4
b0000000000010100 E!
b00100000 U!
0m!
1u!
b000 }!
b00 '"
1W"
b11 )#
1y#
b0101011001000001 +$
13$
#5
0y#
#6
b0000000000000000 (
b0000000000000000 -!
b010 M!
b00000000 U!
1e!
b01 '"
0W"
b0101011001000001 w"
b00 )#
b0000000000000000 Y#
1y#
03$
#7
0y#
#8
b0000000000001010 E!
b101 M!
b0000000000000000 ]!
0e!
1m!
0u!
b11 '"
b01 )#
1y#
#9
0y#
#10
b00000100 U!
0m!
1u!
b00 '"
1?"
b0000000000001010 o"
b11 )#
1y#
b1111110010100101 +$
13$
#11
0y#
#12
b0000000000010100 E!
b111 M!
b00000000 U!
b0000000000001010 ]!
1e!
b01 '"
0?"
b1111110010100101 w"
b00 )#
1y#
03$
#13
0y#
#14
b0000000000000000 E!
0e!
1m!
0u!
b001 }!
b11 '"
b01 )#
1y#
#15
0y#
#16
b0000000000010100 E!
b10000000 U!
0m!
1u!
b000 }!
b00 '"
1g"
b0000000000000000 o"
b11 )#
1y#
b1010111010100110 +$
13$
#17
0y#
#18
b0000000000000000 *
b0000000000000000 =!
b0000000000001010 E!
b101 M!
b00000000 U!
b0000000000000000 ]!
1e!
b01 '"
0g"
b1010111010100110 w"
b00 )#
b0000000000000000 i#
1y#
03$
#19
0y#
#20
b1111111111110110 E!
b011 M!
b0000000000001010 ]!
0e!
1m!
0u!
b001 }!
b11 '"
b0000000000000000 !#
b01 )#
1y#
#21
0y#
#22
b0000000000001010 E!
b00100000 U!
0m!
1u!
b000 }!
b00 '"
1W"
b1111111111110110 o"
b11 )#
1y#
b0101000100000010 +$
13$
#23
0y#
#24
b1111111111110110 (
b1111111111110110 -!
b010 M!
b00000000 U!
1e!
b01 '"
0W"
b0101000100000010 w"
b00 )#
b1111111111110110 Y#
1y#
03$
#25
0y#
#26
b0000000000010100 E!
b100 M!
0e!
1m!
0u!
b11 '"
b0000000000001010 !#
b01 )#
1y#
#27
0y#
#28
b00000100 U!
0m!
1u!
b00 '"
1?"
b0000000000010100 o"
b11 )#
1y#
b0111011001001000 +$
13$
#29
0y#
#30
b0000000000010100 %
b0000000000010100 s
b011 M!
b00000000 U!
1e!
b01 '"
0?"
b0111011001001000 w"
b00 )#
b0000000000010100 A#
1y#
03$
#31
0y#
#32
b0000000000000010 E!
b101 M!
b1111111111110110 ]!
0e!
1m!
0u!
b010 }!
b11 '"
b01 )#
1y#
#33
0y#
#34
b0000000000000000 E!
b00001000 U!
0m!
1u!
b000 }!
b00 '"
1G"
b0000000000000010 o"
b11 )#
1y#
b1011111100110010 +$
13$
#35
0y#
#36
b0000000000000010 &
b0000000000000010 {
b00000000 U!
1e!
b01 '"
0G"
b1011111100110010 w"
b00 )#
b0000000000000010 I#
1y#
03$
#37
0y#
#38
b1111111111110110 E!
b111 M!
b0000000000000000 ]!
0e!
1m!
0u!
b100 }!
b11 '"
b1111111111110110 !#
b01 )#
1y#
#39
0y#
#40
b00100000 U!
0m!
1u!
b000 }!
b00 '"
1W"
b1111111111110110 o"
b11 )#
1y#
b1011101101000001 +$
13$
#41
0y#
#42
b1111111111101100 E!
b101 M!
b00000000 U!
b1111111111110110 ]!
1e!
b01 '"
0W"
b1011101101000001 w"
b00 )#
1y#
03$
#43
0y#
#44
b0000000000000000 E!
b110 M!
b0000000000001010 ]!
0e!
1m!
0u!
b11 '"
b01 )#
1y#
#45
0y#
#46
b00100000 U!
0m!
1u!
b00 '"
1W"
b0000000000000000 o"
b11 )#
1y#
b0100001010110111 +$
13$
#47
0y#
#48
b0000000000000000 (
b0000000000000000 -!
b0000000000001010 E!
b010 M!
b00000000 U!
b0000000000010100 ]!
1e!
b01 '"
0W"
b0100001010110111 w"
b00 )#
b0000000000000000 Y#
1y#
03$
#49
0y#
#50
b0101000000000000 E!
b000 M!
b0000000000001010 ]!
0e!
1m!
0u!
b101 }!
b11 '"
b0000000000010100 !#
b01 )#
1y#
